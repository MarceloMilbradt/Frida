{"remainingRequest":"E:\\AppFrida\\node_modules\\babel-loader\\lib\\index.js!E:\\AppFrida\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\AppFrida\\src\\controller\\ctlRepositorioBase.js","dependencies":[{"path":"E:\\AppFrida\\src\\controller\\ctlRepositorioBase.js","mtime":1633390973243},{"path":"E:\\AppFrida\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\AppFrida\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\AppFrida\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovQXBwRnJpZGEvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRTovQXBwRnJpZGEvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAqIGFzIGRiIGZyb20gIi4vZmlyZWJhc2UiOwoKdmFyIFN3YWwgPSByZXF1aXJlKCdzd2VldGFsZXJ0MicpOwoKaW1wb3J0IHsgZ2V0Tm9tZVVzZXIgfSBmcm9tICIuL0F1dGhTZXJ2aWNlIjsKCnZhciBhdGl2YXJMb2cgPSBmdW5jdGlvbiBhdGl2YXJMb2cobm9tZSwgdGFiZWxhKSB7Ly8gdGFiZWxhLm9uU25hcHNob3QoKHNuYXBzaG90KSA9PiB7CiAgLy8gICAgIGlmIChzbmFwc2hvdC5kb2NDaGFuZ2VzKCkubGVuZ3RoID09IDEpIHsgLypOw6NvIG1vc3RyYXIgcXVhbmRvIHRpdmVyIGxpc3RhbmRvKi8KICAvLyAgICAgICAgIHZhciBjaGFuZ2UgPSBzbmFwc2hvdC5kb2NDaGFuZ2VzKClbMF07CiAgLy8gICAgICAgICBkYi5sb2cuYWRkKHsKICAvLyAgICAgICAgICAgICBpZDogY2hhbmdlLmRvYy5pZCwKICAvLyAgICAgICAgICAgICB1c3VhcmlvOiBnZXROb21lVXNlcigpLAogIC8vICAgICAgICAgICAgIHRhYmVsYTogbm9tZSwKICAvLyAgICAgICAgICAgICB0aXBvOiBjaGFuZ2UudHlwZSwKICAvLyAgICAgICAgICAgICBkYXRhOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksCiAgLy8gICAgICAgICAgICAgZGFkb3M6IGNoYW5nZS5kb2MuZGF0YSgpCiAgLy8gICAgICAgICB9KS5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoIkVycm8gYW8gaW5jbHVpciBsb2ciLCBlcnJvcikpOwogIC8vICAgICB9CiAgLy8gfSk7Cn07Cgp2YXIgbGlzdGFyVG9kb3MgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHRhYmVsYSkgewogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIHRhYmVsYS5nZXQoKS50aGVuKGZ1bmN0aW9uIChzbmFwc2hvdCkgewogICAgICAgICAgICAgIHZhciBkYXRhID0gc25hcHNob3QuZG9jcy5tYXAoZnVuY3Rpb24gKGRvYykgewogICAgICAgICAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoewogICAgICAgICAgICAgICAgICBpZDogZG9jLmlkCiAgICAgICAgICAgICAgICB9LCBkb2MuZGF0YSgpKTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICByZXR1cm4gZGF0YTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC5zZW50KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gbGlzdGFyVG9kb3MoX3gpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGJ1Y2FyUG9ySWQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIodGFiZWxhLCBpZCkgewogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gdGFiZWxhLmRvYyhpZCkuZ2V0KCkudGhlbihmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgICAgICAgaWYgKCFkb2MuZXhpc3RzKSByZXR1cm47CiAgICAgICAgICAgICAgcmV0dXJuIGRvYy5kYXRhKCk7CiAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIkVycm8gYW8gYnVzY2FyIHJlZ2lzdHJvIiwgZXJyb3IpOwogICAgICAgICAgICAgIFN3YWwuZmlyZSgiRXJybyEiLCAiTyBjw7NkaWdvIGRvIHJlZ2lzdHJvIGZvcm5lY2lkbyBuw6NvIGV4aXN0ZSEiLCAiZXJyb3IiKTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQyLnNlbnQpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGJ1Y2FyUG9ySWQoX3gyLCBfeDMpIHsKICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKCnZhciBpbmNsdWlyID0gZnVuY3Rpb24gaW5jbHVpcih0YWJlbGEsIGRhZG9zKSB7CiAgcmV0dXJuIHRhYmVsYS5hZGQoZGFkb3MpLnRoZW4oZnVuY3Rpb24gKGRvYykgewogICAgZGIubG9nLmFkZCh7CiAgICAgIGlkOiBkb2MuaWQsCiAgICAgIHVzdWFyaW86IGdldE5vbWVVc2VyKCksCiAgICAgIHRhYmVsYTogdGFiZWxhLAogICAgICB0aXBvOiAiSSIsCiAgICAgIGRhdGE6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSwKICAgICAgZGFkb3M6IGRvYy5kYXRhKCkKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICByZXR1cm4gY29uc29sZS5lcnJvcigiRXJybyBhbyBpbmNsdWlyIGxvZyIsIGVycm9yKTsKICAgIH0pOwogICAgU3dhbC5maXJlKCJTYWx2byEiLCAiTyByZWdpc3RybyBmb2kgc2Fsdm8gY29tIHN1Y2Vzc28hIiwgInN1Y2Nlc3MiKTsKICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgIGNvbnNvbGUuZXJyb3IoIkVycm8gYW8gaW5jbHVpciByZWdpc3RybyIsIGVycm9yKTsKICAgIFN3YWwuZmlyZSgiRXJybyEiLCAiSG91dmUgdW0gcHJvYmxlbWEgYW8gdGVudGFyIGluY2x1aXIgbyByZWdpc3RybyEiLCAiZXJyb3IiKTsKICB9KTsKfTsKCnZhciBhbHRlcmFyID0gZnVuY3Rpb24gYWx0ZXJhcih0YWJlbGEsIGlkLCBkYWRvcykgewogIHJldHVybiB0YWJlbGEuZG9jKGlkKS5zZXQoZGFkb3MsIHsKICAgIG1lcmdlOiB0cnVlCiAgfSkudGhlbihmdW5jdGlvbiAoZG9jKSB7CiAgICBkYi5sb2cuYWRkKHsKICAgICAgaWQ6IGRvYy5pZCwKICAgICAgdXN1YXJpbzogZ2V0Tm9tZVVzZXIoKSwKICAgICAgdGFiZWxhOiB0YWJlbGEsCiAgICAgIHRpcG86ICJBIiwKICAgICAgZGF0YTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLAogICAgICBkYWRvczogZG9jLmRhdGEoKQogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKCJFcnJvIGFvIGluY2x1aXIgbG9nIiwgZXJyb3IpOwogICAgfSk7CiAgICBTd2FsLmZpcmUoIkF0dWFsaXphZG8hIiwgIk8gcmVnaXN0cm8gZm9pIGF0dWFsaXphZG8gY29tIHN1Y2Vzc28hIiwgInN1Y2Nlc3MiKTsKICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgIGNvbnNvbGUuZXJyb3IoIkVycm8gYW8gYWx0ZXJhciByZWdpc3RybyIsIGVycm9yKTsKICAgIFN3YWwuZmlyZSgiRXJybyEiLCAiSG91dmUgdW0gcHJvYmxlbWEgYW8gdGVudGFyIGFsdGVyYXIgbyByZWdpc3RybyEiLCAiZXJyb3IiKTsKICB9KTsKfTsKCnZhciBleGNsdWlyID0gZnVuY3Rpb24gZXhjbHVpcih0YWJlbGEsIGlkKSB7CiAgcmV0dXJuIFN3YWwuZmlyZSh7CiAgICB0aXRsZTogIkF0ZW7Dp8OjbyIsCiAgICB0ZXh0OiAiRGVzZWphIHJlYWxtZW50ZSBleGNsdWlyIG8gcmVnaXN0cm8/IiwKICAgIGljb246ICJ3YXJuaW5nIiwKICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsCiAgICBjb25maXJtQnV0dG9uQ29sb3I6ICIjMzA4NWQ2IiwKICAgIGNhbmNlbEJ1dHRvbkNvbG9yOiAiI2QzMyIsCiAgICBjb25maXJtQnV0dG9uVGV4dDogIlNpbSwgZXhjbHVpciEiLAogICAgY2FuY2VsQnV0dG9uVGV4dDogIkNhbmNlbGFyIgogIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgaWYgKHJlc3VsdC5pc0NvbmZpcm1lZCkgewogICAgICB0YWJlbGEuZG9jKGlkKS5kZWxldGUoKS50aGVuKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICBkYi5sb2cuYWRkKHsKICAgICAgICAgIGlkOiBkb2MuaWQsCiAgICAgICAgICB1c3VhcmlvOiBnZXROb21lVXNlcigpLAogICAgICAgICAgdGFiZWxhOiB0YWJlbGEsCiAgICAgICAgICB0aXBvOiAiRSIsCiAgICAgICAgICBkYXRhOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksCiAgICAgICAgICBkYWRvczogZG9jLmRhdGEoKQogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoIkVycm8gYW8gaW5jbHVpciBsb2ciLCBlcnJvcik7CiAgICAgICAgfSk7CiAgICAgICAgU3dhbC5maXJlKCJEZWxldGFkbyEiLCAiTyByZWdpc3RybyBmb2kgZGVsZXRhZG8gY29tIHN1Y2Vzc28hIiwgInN1Y2Nlc3MiKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcigiRXJybyBhbyBleGNsdWlyIHJlZ2lzdHJvIiwgZXJyb3IpOwogICAgICAgIFN3YWwuZmlyZSgiRXJybyEiLCAiSG91dmUgdW0gcHJvYmxlbWEgYW8gdGVudGFyIGV4Y2x1aXIgbyByZWdpc3RybyEiLCAiZXJyb3IiKTsKICAgICAgfSk7CiAgICB9CiAgfSk7Cn07CgpleHBvcnQgeyBhdGl2YXJMb2csIGxpc3RhclRvZG9zLCBidWNhclBvcklkLCBpbmNsdWlyLCBhbHRlcmFyLCBleGNsdWlyIH07"},{"version":3,"sources":["E:/AppFrida/src/controller/ctlRepositorioBase.js"],"names":["db","Swal","require","getNomeUser","ativarLog","nome","tabela","listarTodos","get","then","snapshot","data","docs","map","doc","id","bucarPorId","exists","catch","error","console","fire","incluir","dados","add","log","usuario","tipo","Date","toISOString","alterar","set","merge","excluir","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","delete"],"mappings":"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","sourcesContent":["import * as db from \"./firebase\";\r\nconst Swal = require('sweetalert2')\r\nimport { getNomeUser } from \"./AuthService\";\r\n\r\nvar ativarLog = (nome, tabela) => {\r\n    // tabela.onSnapshot((snapshot) => {\r\n    //     if (snapshot.docChanges().length == 1) { /*Não mostrar quando tiver listando*/\r\n    //         var change = snapshot.docChanges()[0];\r\n    //         db.log.add({\r\n    //             id: change.doc.id,\r\n    //             usuario: getNomeUser(),\r\n    //             tabela: nome,\r\n    //             tipo: change.type,\r\n    //             data: new Date().toISOString(),\r\n    //             dados: change.doc.data()\r\n    //         }).catch((error) => console.error(\"Erro ao incluir log\", error));\r\n    //     }\r\n    // });\r\n}\r\n\r\nvar listarTodos = async (tabela) => {\r\n    return await tabela.get().then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n        }));\r\n        return data;\r\n    });\r\n}\r\n\r\nvar bucarPorId = async (tabela, id) => {\r\n    return await tabela\r\n        .doc(id).get()\r\n        .then((doc) => {\r\n            if (!doc.exists) return;\r\n            return doc.data();\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Erro ao buscar registro\", error);\r\n            Swal.fire(\"Erro!\", \"O código do registro fornecido não existe!\", \"error\");\r\n        });\r\n}\r\n\r\nvar incluir = (tabela, dados) => {\r\n    return tabela\r\n        .add(dados)\r\n        .then((doc) => {\r\n            db.log.add({\r\n                id: doc.id,\r\n                usuario: getNomeUser(),\r\n                tabela,\r\n                tipo: \"I\",\r\n                data: new Date().toISOString(),\r\n                dados: doc.data()\r\n            }).catch((error) => console.error(\"Erro ao incluir log\", error));\r\n        \r\n            Swal.fire(\"Salvo!\", \"O registro foi salvo com sucesso!\", \"success\");\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Erro ao incluir registro\", error);\r\n            Swal.fire(\"Erro!\", \"Houve um problema ao tentar incluir o registro!\", \"error\");\r\n        });\r\n}\r\n\r\nvar alterar = (tabela, id, dados) => {\r\n    return tabela\r\n        .doc(id)\r\n        .set(dados, { merge: true })\r\n        .then((doc) => {\r\n            db.log.add({\r\n                id: doc.id,\r\n                usuario: getNomeUser(),\r\n                tabela,\r\n                tipo: \"A\",\r\n                data: new Date().toISOString(),\r\n                dados: doc.data()\r\n            }).catch((error) => console.error(\"Erro ao incluir log\", error));\r\n            Swal.fire(\"Atualizado!\", \"O registro foi atualizado com sucesso!\", \"success\");\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Erro ao alterar registro\", error);\r\n            Swal.fire(\"Erro!\", \"Houve um problema ao tentar alterar o registro!\", \"error\");\r\n        });\r\n}\r\n\r\nvar excluir = (tabela, id) => {\r\n    return Swal.fire({\r\n        title: \"Atenção\",\r\n        text: \"Deseja realmente excluir o registro?\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Sim, excluir!\",\r\n        cancelButtonText: \"Cancelar\",\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            tabela\r\n                .doc(id)\r\n                .delete()\r\n                .then((doc) => {\r\n                    db.log.add({\r\n                        id: doc.id,\r\n                        usuario: getNomeUser(),\r\n                        tabela,\r\n                        tipo: \"E\",\r\n                        data: new Date().toISOString(),\r\n                        dados: doc.data()\r\n                    }).catch((error) => console.error(\"Erro ao incluir log\", error));\r\n                    Swal.fire(\"Deletado!\", \"O registro foi deletado com sucesso!\", \"success\");\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Erro ao excluir registro\", error);\r\n                    Swal.fire(\"Erro!\", \"Houve um problema ao tentar excluir o registro!\", \"error\");\r\n                });\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    ativarLog,\r\n    listarTodos,\r\n    bucarPorId,\r\n    incluir,\r\n    alterar,\r\n    excluir\r\n}"]}]}