{"remainingRequest":"E:\\AppFrida\\node_modules\\babel-loader\\lib\\index.js!E:\\AppFrida\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\AppFrida\\src\\controller\\ctlAjuda.js","dependencies":[{"path":"E:\\AppFrida\\src\\controller\\ctlAjuda.js","mtime":1636054168901},{"path":"E:\\AppFrida\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\AppFrida\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\AppFrida\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRTovQXBwRnJpZGEvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRTovQXBwRnJpZGEvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAqIGFzIHJlcG8gZnJvbSAiLi9jdGxSZXBvc2l0b3Jpb0Jhc2UiOwppbXBvcnQgeyBhanVkYSB9IGZyb20gIi4vZmlyZWJhc2UiOwppbXBvcnQgeyBsb2dvdXQsIGxvZ2luQW5vbmltbyB9IGZyb20gJy4vQXV0aFNlcnZpY2UnOwoKdmFyIFN3YWwgPSByZXF1aXJlKCdzd2VldGFsZXJ0MicpOwoKcmVwby5hdGl2YXJMb2coJ2FqdWRhJywgYWp1ZGEpOwoKdmFyIGxpc3RhclRvZG9zID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVwby5saXN0YXJUb2RvcyhhanVkYSkpOwoKICAgICAgICAgIGNhc2UgMToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBsaXN0YXJUb2RvcygpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGJ1Y2FyUG9ySWQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoaWQpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXBvLmJ1Y2FyUG9ySWQoYWp1ZGEsIGlkKSk7CgogICAgICAgICAgY2FzZSAxOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMik7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gYnVjYXJQb3JJZChfeCkgewogICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGxpc3RhclVsdGltb3NOID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKG4pIHsKICAgIHZhciBkYXRlLCBsaXN0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgZGF0ZSA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgIGRhdGUuc2V0TW9udGgoZGF0ZS5nZXRNb250aCgpIC0gMSk7CiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIGFqdWRhLndoZXJlKCJkYXRhIiwgIj49IiwgZGF0ZSkub3JkZXJCeSgnZGF0YScsICdkZXNjJykubGltaXQobiAhPT0gbnVsbCAmJiBuICE9PSB2b2lkIDAgPyBuIDogNSkuZ2V0KCk7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBsaXN0ID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgIGxpc3QgPSBsaXN0LmRvY3MubWFwKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7CiAgICAgICAgICAgICAgICBpZDogZG9jLmlkCiAgICAgICAgICAgICAgfSwgZG9jLmRhdGEoKSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgbGlzdCk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMyk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gbGlzdGFyVWx0aW1vc04oX3gyKSB7CiAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Cgp2YXIgaW5jbHVpciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9pbmNsdWlyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNChkYWRvcykgewogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gbG9naW5Bbm9uaW1vKCk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgYWp1ZGEuYWRkKGRhZG9zKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBsb2dvdXQoKTsKICAgICAgICAgICAgICBTd2FsLmZpcmUoIlNhbHZvISIsICJPIHBlZGlkbyBkZSBhanVkYSBmb2kgc2Fsdm8gY29tIHN1Y2Vzc28hIiwgInN1Y2Nlc3MiKTsKICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcigiRXJybyBhbyBpbmNsdWlyIGF2YWxpYcOnw6NvIiwgZXJyb3IpOwogICAgICAgICAgICAgIFN3YWwuZmlyZSgiRXJybyEiLCAiSG91dmUgdW0gcHJvYmxlbWEgYW8gdGVudGFyIGluY2x1aXIgbyBwZWRpZG8gZGUgYWp1ZGEhIiwgImVycm9yIik7CiAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0KTsKICB9KSk7CgogIGZ1bmN0aW9uIGluY2x1aXIoX3gzKSB7CiAgICByZXR1cm4gX2luY2x1aXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9CgogIHJldHVybiBpbmNsdWlyOwp9KCk7IC8vIGNvbnN0IGFsdGVyYXIgPSAoaWQsIGRhZG9zKSA9PiByZXBvLmFsdGVyYXIoYWp1ZGEsIGlkLCBkYWRvcykKCgp2YXIgZXhjbHVpciA9IGZ1bmN0aW9uIGV4Y2x1aXIoaWQpIHsKICByZXR1cm4gcmVwby5leGNsdWlyKGFqdWRhLCBpZCk7Cn07IC8vIGNvbnN0IGFqdXN0YXJEYXRhcyA9IGFzeW5jICgpID0+IHsKLy8gICAgIGxldCBhanVkYXMgPSBhd2FpdCBsaXN0YXJUb2RvcygpCi8vICAgICBhanVkYXMuZm9yRWFjaChhID0+IHsKLy8gICAgICAgICBjb25zb2xlLmxvZyhhKTsKLy8gICAgICAgICBsZXQgZGF5cyA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDE5KTsKLy8gICAgICAgICBsZXQgZGF0ZSA9IG5ldyBEYXRlKCk7Ci8vICAgICAgICAgZGF0ZS5zZXREYXRlKGRheXMpCi8vICAgICAgICAgYS5kYXRhID1kYXRlCi8vICAgICAgICAgYWx0ZXJhcihhLmlkLCBhKTsKLy8gICAgIH0pCi8vIH0KCgp2YXIgYWx0ZXJhciA9IGZ1bmN0aW9uIGFsdGVyYXIoaWQsIGRvYykgewogIHJldHVybiBhanVkYS5kb2MoaWQpLnVwZGF0ZShkb2MpOwp9OwoKZXhwb3J0IHsgbGlzdGFyVG9kb3MsIGJ1Y2FyUG9ySWQsIGluY2x1aXIsIGFsdGVyYXIsIGV4Y2x1aXIsIGxpc3RhclVsdGltb3NOIH07"},{"version":3,"sources":["E:/AppFrida/src/controller/ctlAjuda.js"],"names":["repo","ajuda","logout","loginAnonimo","Swal","require","ativarLog","listarTodos","bucarPorId","id","listarUltimosN","n","date","Date","setMonth","getMonth","where","orderBy","limit","get","list","docs","map","doc","data","incluir","dados","add","then","fire","catch","error","console","excluir","alterar","update"],"mappings":"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","sourcesContent":["import * as repo from \"./ctlRepositorioBase\";\r\nimport { ajuda } from \"./firebase\";\r\nimport { logout, loginAnonimo } from './AuthService';\r\nconst Swal = require('sweetalert2')\r\n\r\nrepo.ativarLog('ajuda', ajuda);\r\nconst listarTodos = async () => repo.listarTodos(ajuda)\r\nconst bucarPorId = async (id) => repo.bucarPorId(ajuda, id)\r\n\r\nconst listarUltimosN = async n => {\r\n    let date = new Date();\r\n    date.setMonth(date.getMonth() - 1)\r\n    let list = await ajuda.where(\"data\", \">=\", date).orderBy('data', 'desc').limit(n ?? 5).get();\r\n    list = list.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n    }));\r\n    return list\r\n}\r\n\r\n\r\nconst incluir = async function incluir(dados) {\r\n    await loginAnonimo();\r\n    return ajuda\r\n        .add(dados)\r\n        .then(() => {\r\n            logout()\r\n            Swal.fire(\"Salvo!\", \"O pedido de ajuda foi salvo com sucesso!\", \"success\");\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Erro ao incluir avaliação\", error);\r\n            Swal.fire(\"Erro!\", \"Houve um problema ao tentar incluir o pedido de ajuda!\", \"error\");\r\n        });\r\n}\r\n\r\n// const alterar = (id, dados) => repo.alterar(ajuda, id, dados)\r\nconst excluir = (id) => repo.excluir(ajuda, id)\r\n// const ajustarDatas = async () => {\r\n//     let ajudas = await listarTodos()\r\n//     ajudas.forEach(a => {\r\n//         console.log(a);\r\n//         let days = Math.floor(Math.random() * 19);\r\n//         let date = new Date();\r\n//         date.setDate(days)\r\n//         a.data =date\r\n//         alterar(a.id, a);\r\n//     })\r\n// }\r\n\r\nvar alterar = function alterar(id, doc) {\r\n    return ajuda.doc(id).update(doc)\r\n}\r\nexport {\r\n    listarTodos,\r\n    bucarPorId,\r\n    incluir,\r\n    alterar,\r\n    excluir,\r\n    listarUltimosN,\r\n    \r\n}"]}]}