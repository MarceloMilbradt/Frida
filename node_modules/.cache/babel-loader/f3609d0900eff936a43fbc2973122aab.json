{"remainingRequest":"E:\\AppFrida\\node_modules\\babel-loader\\lib\\index.js!E:\\AppFrida\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\AppFrida\\src\\store\\index.js","dependencies":[{"path":"E:\\AppFrida\\src\\store\\index.js","mtime":1633404724511},{"path":"E:\\AppFrida\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\AppFrida\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\AppFrida\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkU6L0FwcEZyaWRhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgeyBjcmVhdGVTdG9yZSB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgeyBsb2dpbiBhcyBfbG9naW4sIGxvZ291dCBhcyBfbG9nb3V0LCBnZXRDdXJyZW50VXNlciB9IGZyb20gJy4uL2NvbnRyb2xsZXIvQXV0aFNlcnZpY2UnOwppbXBvcnQgcm91dGVyIGZyb20gJy4uL3JvdXRlcic7CnZhciBkZW51bmNpYSA9IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBkZW51bmNpYTogewogICAgICB2aXRpbWE6IHsKICAgICAgICBlbmRlcmVjbzoge30sCiAgICAgICAgdHJhYmFsaG86IHt9LAogICAgICAgIGZpbGlhY2FvOiB7fSwKICAgICAgICBpc1ZhbGlkOiB0cnVlCiAgICAgIH0sCiAgICAgIGFncmVzc29yOiB7CiAgICAgICAgZW5kZXJlY286IHt9LAogICAgICAgIHRyYWJhbGhvOiB7fSwKICAgICAgICBmaWxpYWNhbzoge30sCiAgICAgICAgaXNWYWxpZDogdHJ1ZQogICAgICB9CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIFNFVF9GT1JNX1ZJVElNQTogZnVuY3Rpb24gU0VUX0ZPUk1fVklUSU1BKHN0YXRlLCBmb3JtKSB7CiAgICAgIHN0YXRlLmRlbnVuY2lhLnZpdGltYSA9IGZvcm07CiAgICB9LAogICAgU0VUX0ZPUk1fQUdSRVNTT1I6IGZ1bmN0aW9uIFNFVF9GT1JNX0FHUkVTU09SKHN0YXRlLCBmb3JtKSB7CiAgICAgIHN0YXRlLmRlbnVuY2lhLmFncmVzc29yID0gZm9ybTsKICAgIH0sCiAgICBTRVRfVkFMSURfQUdSRVNTT1I6IGZ1bmN0aW9uIFNFVF9WQUxJRF9BR1JFU1NPUihzdGF0ZSwgdikgewogICAgICBzdGF0ZS5kZW51bmNpYS5hZ3Jlc3Nvci5pc1ZhbGlkID0gdjsKICAgIH0sCiAgICBTRVRfVkFMSURfVklUSU1BOiBmdW5jdGlvbiBTRVRfVkFMSURfVklUSU1BKHN0YXRlLCB2KSB7CiAgICAgIHN0YXRlLmRlbnVuY2lhLnZpdGltYS5pc1ZhbGlkID0gdjsKICAgIH0sCiAgICBTRVRfREVOVU5DSUE6IGZ1bmN0aW9uIFNFVF9ERU5VTkNJQShzdGF0ZSwgZm9ybSkgewogICAgICBzdGF0ZS5kZW51bmNpYSA9IGZvcm07CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBzZXRGb3JtQWdyZXNzb3I6IGZ1bmN0aW9uIHNldEZvcm1BZ3Jlc3NvcihfcmVmLCBmb3JtKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgY29tbWl0KCdTRVRfRk9STV9BR1JFU1NPUicsIGZvcm0pOwogICAgfSwKICAgIHNldFZhbGlkQWdyZXNzb3I6IGZ1bmN0aW9uIHNldFZhbGlkQWdyZXNzb3IoX3JlZjIsIHYpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgY29tbWl0KCdTRVRfVkFMSURfQUdSRVNTT1InLCB2KTsKICAgIH0sCiAgICBzZXREZW51bmNpYTogZnVuY3Rpb24gc2V0RGVudW5jaWEoX3JlZjMsIGRlbnVuY2lhKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgIGNvbW1pdCgnU0VUX0RFTlVOQ0lBJywgZGVudW5jaWEpOwogICAgfSwKICAgIHNldEZvcm1WaXRpbWE6IGZ1bmN0aW9uIHNldEZvcm1WaXRpbWEoX3JlZjQsIGZvcm0pIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgY29tbWl0KCdTRVRfRk9STV9WSVRJTUEnLCBmb3JtKTsKICAgIH0sCiAgICBzZXRWYWxpZFZpdGltYTogZnVuY3Rpb24gc2V0VmFsaWRWaXRpbWEoX3JlZjUsIHYpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICAgICAgY29tbWl0KCdTRVRfVkFMSURfVklUSU1BJywgdik7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXRWaXRpbWE6IGZ1bmN0aW9uIGdldFZpdGltYShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGVudW5jaWEudml0aW1hOwogICAgfSwKICAgIGdldERlbnVuY2lhOiBmdW5jdGlvbiBnZXREZW51bmNpYShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGVudW5jaWE7CiAgICB9LAogICAgZ2V0QWdyZXNzb3I6IGZ1bmN0aW9uIGdldEFncmVzc29yKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5kZW51bmNpYS5hZ3Jlc3NvcjsKICAgIH0sCiAgICB2aXRpbWFJc1ZhbGlkOiBmdW5jdGlvbiB2aXRpbWFJc1ZhbGlkKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5kZW51bmNpYS52aXRpbWEuaXNWYWxpZDsKICAgIH0sCiAgICBhZ3Jlc3NvcklzVmFsaWQ6IGZ1bmN0aW9uIGFncmVzc29ySXNWYWxpZChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGVudW5jaWEuYWdyZXNzb3IuaXNWYWxpZDsKICAgIH0sCiAgICBkZW51bmNpYUlzVmFsaWQ6IGZ1bmN0aW9uIGRlbnVuY2lhSXNWYWxpZChzdGF0ZSkgewogICAgICByZXR1cm4gdGhpcy52aXRpbWFJc1ZhbGlkKHN0YXRlKSAmJiB0aGlzLmFncmVzc29ySXNWYWxpZChzdGF0ZSk7CiAgICB9CiAgfQp9Owp2YXIgc2VjdXJpdHkgPSB7CiAgc3RhdGU6IHsKICAgIHVzZXI6IHt9LAogICAgbG9nZ2VkOiBnZXRDdXJyZW50VXNlcigpICE9IG51bGwsCiAgICBpc0luaXRlZDogZmFsc2UKICB9LAogIG11dGF0aW9uczogewogICAgU0VUX1VTRVI6IGZ1bmN0aW9uIFNFVF9VU0VSKHN0YXRlLCB1c2VyKSB7CiAgICAgIHN0YXRlLnVzZXIgPSB1c2VyOwogICAgICBzdGF0ZS5sb2dnZWQgPSB0cnVlOwogICAgfSwKICAgIExPR09VVF9VU0VSOiBmdW5jdGlvbiBMT0dPVVRfVVNFUihzdGF0ZSkgewogICAgICBzdGF0ZS51c2VyID0ge307CiAgICAgIHN0YXRlLmxvZ2dlZCA9IGZhbHNlOwogICAgfSwKICAgIElOSVRFRDogZnVuY3Rpb24gSU5JVEVEKHN0YXRlKSB7CiAgICAgIHN0YXRlLmlzSW5pdGVkID0gdHJ1ZTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIHNldFVzZXI6IGZ1bmN0aW9uIHNldFVzZXIoX3JlZjYsIHVzZXIpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWY2LmNvbW1pdDsKICAgICAgY29tbWl0KCdTRVRfVVNFUicsIHVzZXIpOwogICAgfSwKICAgIGxvZ2luOiBmdW5jdGlvbiBsb2dpbihfcmVmNywgX3JlZjgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIGVtYWlsLCBwYXNzd29yZCwgcmVzdWx0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjcuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBlbWFpbCA9IF9yZWY4LmVtYWlsLCBwYXNzd29yZCA9IF9yZWY4LnBhc3N3b3JkOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2xvZ2luKGVtYWlsLCBwYXNzd29yZCkudGhlbihmdW5jdGlvbiAodXNyKSB7CiAgICAgICAgICAgICAgICAgIGlmICghdXNyKSByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKCdzZXRVc2VyJywgdXNyKTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGlmIChyZXN1bHQpIHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgICAgbmFtZTogJ1DDoWdpbmEgSW5pY2lhbCcKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoX3JlZjkpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGNvbW1pdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjkuY29tbWl0OwogICAgICAgICAgICAgICAgcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgICBuYW1lOiAnSG9tZScKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIF9sb2dvdXQoKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY29tbWl0KCdMT0dPVVRfVVNFUicpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzdGF0ZUNoYW5nZTogZnVuY3Rpb24gc3RhdGVDaGFuZ2UoX3JlZjEwLCB1c3IpIHsKICAgICAgdmFyIGRpc3BhdGNoID0gX3JlZjEwLmRpc3BhdGNoLAogICAgICAgICAgY29tbWl0ID0gX3JlZjEwLmNvbW1pdDsKICAgICAgY29tbWl0KCdJTklURUQnKTsKCiAgICAgIGlmICh1c3IpIHsKICAgICAgICBkaXNwYXRjaCgnc2V0VXNlcicsIHVzcik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29tbWl0KCdMT0dPVVRfVVNFUicpOwogICAgICB9CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXRVc2VyOiBmdW5jdGlvbiBnZXRVc2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyOwogICAgfSwKICAgIGdldExvZ2dlZDogZnVuY3Rpb24gZ2V0TG9nZ2VkKHN0YXRlKSB7CiAgICAgIHZhciB1c3IgPSBnZXRDdXJyZW50VXNlcigpOwogICAgICBpZiAodXNyICYmICEhdXNyICE9IHN0YXRlLmxvZ2dlZCkgc3RhdGUuZGlzcGF0Y2goJ3NldFVzZXInLCB1c3IpOwogICAgICByZXR1cm4gc3RhdGUubG9nZ2VkOwogICAgfSwKICAgIGdldEluaXRlZDogZnVuY3Rpb24gZ2V0SW5pdGVkKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5pc0luaXRlZDsKICAgIH0KICB9Cn07CnZhciBhbGdvbGlhID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIHJlZnJlc2hlZDogZmFsc2UKICB9LAogIG11dGF0aW9uczogewogICAgU0VUX1JFRlJFU0hFRDogZnVuY3Rpb24gU0VUX1JFRlJFU0hFRChzdGF0ZSwgcmVmcmVzaCkgewogICAgICBzdGF0ZS5yZWZyZXNoZWQgPSByZWZyZXNoOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgc2V0UmVmcmVzaGVkOiBmdW5jdGlvbiBzZXRSZWZyZXNoZWQoX3JlZjExLCByZWZyZXNoKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMTEuY29tbWl0OwogICAgICBjb21taXQoJ1NFVF9SRUZSRVNIRUQnLCByZWZyZXNoKTsKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIGdldFJlZnJlc2hlZDogZnVuY3Rpb24gZ2V0UmVmcmVzaGVkKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5yZWZyZXNoZWQ7CiAgICB9CiAgfQp9Owp2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZSh7CiAgbW9kdWxlczogewogICAgc2VjdXJpdHk6IHNlY3VyaXR5LAogICAgZGVudW5jaWE6IGRlbnVuY2lhLAogICAgYWxnb2xpYTogYWxnb2xpYQogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHN0b3JlOw=="},{"version":3,"sources":["E:/AppFrida/src/store/index.js"],"names":["createStore","login","logout","getCurrentUser","router","denuncia","namespaced","state","vitima","endereco","trabalho","filiacao","isValid","agressor","mutations","SET_FORM_VITIMA","form","SET_FORM_AGRESSOR","SET_VALID_AGRESSOR","v","SET_VALID_VITIMA","SET_DENUNCIA","actions","setFormAgressor","commit","setValidAgressor","setDenuncia","setFormVitima","setValidVitima","getters","getVitima","getDenuncia","getAgressor","vitimaIsValid","agressorIsValid","denunciaIsValid","security","user","logged","isInited","SET_USER","LOGOUT_USER","INITED","setUser","dispatch","email","password","then","usr","result","push","name","stateChange","getUser","getLogged","getInited","algolia","refreshed","SET_REFRESHED","refresh","setRefreshed","getRefreshed","store","modules"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,SAASC,KAAK,IAALA,MAAT,EAAgBC,MAAM,IAANA,OAAhB,EAAwBC,cAAxB,QAA8C,2BAA9C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbC,EAAAA,KAAK,EAAE;AACHF,IAAAA,QAAQ,EAAE;AACNG,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE,EADN;AAEJC,QAAAA,QAAQ,EAAE,EAFN;AAGJC,QAAAA,QAAQ,EAAE,EAHN;AAIJC,QAAAA,OAAO,EAAE;AAJL,OADF;AAQNC,MAAAA,QAAQ,EAAE;AACNJ,QAAAA,QAAQ,EAAE,EADJ;AAENC,QAAAA,QAAQ,EAAE,EAFJ;AAGNC,QAAAA,QAAQ,EAAE,EAHJ;AAINC,QAAAA,OAAO,EAAE;AAJH;AARJ;AADP,GAFM;AAmBbE,EAAAA,SAAS,EAAE;AACPC,IAAAA,eADO,2BACSR,KADT,EACgBS,IADhB,EACsB;AACzBT,MAAAA,KAAK,CAACF,QAAN,CAAeG,MAAf,GAAwBQ,IAAxB;AACH,KAHM;AAIPC,IAAAA,iBAJO,6BAIWV,KAJX,EAIkBS,IAJlB,EAIwB;AAC3BT,MAAAA,KAAK,CAACF,QAAN,CAAeQ,QAAf,GAA0BG,IAA1B;AACH,KANM;AAOPE,IAAAA,kBAPO,8BAOYX,KAPZ,EAOmBY,CAPnB,EAOsB;AACzBZ,MAAAA,KAAK,CAACF,QAAN,CAAeQ,QAAf,CAAwBD,OAAxB,GAAkCO,CAAlC;AACH,KATM;AAUPC,IAAAA,gBAVO,4BAUUb,KAVV,EAUiBY,CAVjB,EAUoB;AACvBZ,MAAAA,KAAK,CAACF,QAAN,CAAeG,MAAf,CAAsBI,OAAtB,GAAgCO,CAAhC;AACH,KAZM;AAaPE,IAAAA,YAbO,wBAaMd,KAbN,EAaaS,IAbb,EAamB;AACtBT,MAAAA,KAAK,CAACF,QAAN,GAAiBW,IAAjB;AACH;AAfM,GAnBE;AAoCbM,EAAAA,OAAO,EAAE;AACLC,IAAAA,eADK,iCACuBP,IADvB,EAC6B;AAAA,UAAhBQ,MAAgB,QAAhBA,MAAgB;AAC9BA,MAAAA,MAAM,CAAC,mBAAD,EAAsBR,IAAtB,CAAN;AACH,KAHI;AAILS,IAAAA,gBAJK,mCAIwBN,CAJxB,EAI2B;AAAA,UAAbK,MAAa,SAAbA,MAAa;AAC5BA,MAAAA,MAAM,CAAC,oBAAD,EAAuBL,CAAvB,CAAN;AACH,KANI;AAOLO,IAAAA,WAPK,8BAOmBrB,QAPnB,EAO6B;AAAA,UAApBmB,MAAoB,SAApBA,MAAoB;AAC9BA,MAAAA,MAAM,CAAC,cAAD,EAAiBnB,QAAjB,CAAN;AACH,KATI;AAULsB,IAAAA,aAVK,gCAUqBX,IAVrB,EAU2B;AAAA,UAAhBQ,MAAgB,SAAhBA,MAAgB;AAC5BA,MAAAA,MAAM,CAAC,iBAAD,EAAoBR,IAApB,CAAN;AACH,KAZI;AAaLY,IAAAA,cAbK,iCAasBT,CAbtB,EAayB;AAAA,UAAbK,MAAa,SAAbA,MAAa;AAC1BA,MAAAA,MAAM,CAAC,kBAAD,EAAqBL,CAArB,CAAN;AACH;AAfI,GApCI;AAqDbU,EAAAA,OAAO,EAAE;AACLC,IAAAA,SADK,qBACKvB,KADL,EACY;AACb,aAAOA,KAAK,CAACF,QAAN,CAAeG,MAAtB;AACH,KAHI;AAILuB,IAAAA,WAJK,uBAIOxB,KAJP,EAIc;AACf,aAAOA,KAAK,CAACF,QAAb;AACH,KANI;AAOL2B,IAAAA,WAPK,uBAOOzB,KAPP,EAOc;AACf,aAAOA,KAAK,CAACF,QAAN,CAAeQ,QAAtB;AACH,KATI;AAULoB,IAAAA,aAVK,yBAUS1B,KAVT,EAUgB;AACjB,aAAOA,KAAK,CAACF,QAAN,CAAeG,MAAf,CAAsBI,OAA7B;AACH,KAZI;AAaLsB,IAAAA,eAbK,2BAaW3B,KAbX,EAakB;AACnB,aAAOA,KAAK,CAACF,QAAN,CAAeQ,QAAf,CAAwBD,OAA/B;AACH,KAfI;AAgBLuB,IAAAA,eAhBK,2BAgBW5B,KAhBX,EAgBkB;AACnB,aAAO,KAAK0B,aAAL,CAAmB1B,KAAnB,KAA6B,KAAK2B,eAAL,CAAqB3B,KAArB,CAApC;AACH;AAlBI;AArDI,CAAjB;AA2EA,IAAM6B,QAAQ,GAAG;AACb7B,EAAAA,KAAK,EAAE;AACH8B,IAAAA,IAAI,EAAE,EADH;AAEHC,IAAAA,MAAM,EAAEnC,cAAc,MAAM,IAFzB;AAGHoC,IAAAA,QAAQ,EAAE;AAHP,GADM;AAMbzB,EAAAA,SAAS,EAAE;AACP0B,IAAAA,QADO,oBACEjC,KADF,EACS8B,IADT,EACe;AAClB9B,MAAAA,KAAK,CAAC8B,IAAN,GAAaA,IAAb;AACA9B,MAAAA,KAAK,CAAC+B,MAAN,GAAe,IAAf;AACH,KAJM;AAKPG,IAAAA,WALO,uBAKKlC,KALL,EAKY;AACfA,MAAAA,KAAK,CAAC8B,IAAN,GAAa,EAAb;AACA9B,MAAAA,KAAK,CAAC+B,MAAN,GAAe,KAAf;AACH,KARM;AASPI,IAAAA,MATO,kBASAnC,KATA,EASO;AACVA,MAAAA,KAAK,CAACgC,QAAN,GAAiB,IAAjB;AACH;AAXM,GANE;AAmBbjB,EAAAA,OAAO,EAAE;AACLqB,IAAAA,OADK,0BACeN,IADf,EACqB;AAAA,UAAhBb,MAAgB,SAAhBA,MAAgB;AACtBA,MAAAA,MAAM,CAAC,UAAD,EAAaa,IAAb,CAAN;AACH,KAHI;AAICpC,IAAAA,KAJD,+BAI0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjC2C,gBAAAA,QAAiC,SAAjCA,QAAiC;AAAnBC,gBAAAA,KAAmB,SAAnBA,KAAmB,EAAZC,QAAY,SAAZA,QAAY;AAAA;AAAA,uBACtB7C,MAAK,CAAC4C,KAAD,EAAQC,QAAR,CAAL,CAAuBC,IAAvB,CAA4B,UAAAC,GAAG,EAAI;AACpD,sBAAI,CAACA,GAAL,EACI,OAAO,KAAP;AACJJ,kBAAAA,QAAQ,CAAC,SAAD,EAAYI,GAAZ,CAAR;AACA,yBAAO,IAAP;AACH,iBALoB,CADsB;;AAAA;AACrCC,gBAAAA,MADqC;AAO3C,oBAAIA,MAAJ,EACI7C,MAAM,CAAC8C,IAAP,CAAY;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAZ;;AARuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS9C,KAbI;AAcCjD,IAAAA,MAdD,yBAcoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVsB,gBAAAA,MAAU,SAAVA,MAAU;AACrBpB,gBAAAA,MAAM,CAAC8C,IAAP,CAAY;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAZ;AADqB;AAAA,uBAEfjD,OAAM,EAFS;;AAAA;AAGrBsB,gBAAAA,MAAM,CAAC,aAAD,CAAN;;AAHqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIxB,KAlBI;AAmBL4B,IAAAA,WAnBK,+BAmB6BJ,GAnB7B,EAmBkC;AAAA,UAAzBJ,QAAyB,UAAzBA,QAAyB;AAAA,UAAfpB,MAAe,UAAfA,MAAe;AACnCA,MAAAA,MAAM,CAAC,QAAD,CAAN;;AACA,UAAIwB,GAAJ,EAAS;AACLJ,QAAAA,QAAQ,CAAC,SAAD,EAAYI,GAAZ,CAAR;AACH,OAFD,MAEO;AACHxB,QAAAA,MAAM,CAAC,aAAD,CAAN;AACH;AACJ;AA1BI,GAnBI;AA+CbK,EAAAA,OAAO,EAAE;AACLwB,IAAAA,OADK,mBACG9C,KADH,EACU;AACX,aAAOA,KAAK,CAAC8B,IAAb;AACH,KAHI;AAILiB,IAAAA,SAJK,qBAIK/C,KAJL,EAIY;AACb,UAAIyC,GAAG,GAAG7C,cAAc,EAAxB;AACA,UAAI6C,GAAG,IAAI,CAAC,CAACA,GAAF,IAASzC,KAAK,CAAC+B,MAA1B,EACI/B,KAAK,CAACqC,QAAN,CAAe,SAAf,EAA0BI,GAA1B;AACJ,aAAOzC,KAAK,CAAC+B,MAAb;AAEH,KAVI;AAWLiB,IAAAA,SAXK,qBAWKhD,KAXL,EAWY;AACb,aAAOA,KAAK,CAACgC,QAAb;AACH;AAbI;AA/CI,CAAjB;AAgEA,IAAMiB,OAAO,GAAG;AACZlD,EAAAA,UAAU,EAAE,IADA;AAGZC,EAAAA,KAAK,EAAE;AACHkD,IAAAA,SAAS,EAAE;AADR,GAHK;AAMZ3C,EAAAA,SAAS,EAAE;AACP4C,IAAAA,aADO,yBACOnD,KADP,EACcoD,OADd,EACuB;AAC1BpD,MAAAA,KAAK,CAACkD,SAAN,GAAkBE,OAAlB;AACH;AAHM,GANC;AAYZrC,EAAAA,OAAO,EAAE;AACLsC,IAAAA,YADK,gCACoBD,OADpB,EAC6B;AAAA,UAAnBnC,MAAmB,UAAnBA,MAAmB;AAC9BA,MAAAA,MAAM,CAAC,eAAD,EAAkBmC,OAAlB,CAAN;AACH;AAHI,GAZG;AAiBZ9B,EAAAA,OAAO,EAAE;AACLgC,IAAAA,YADK,wBACQtD,KADR,EACe;AAChB,aAAOA,KAAK,CAACkD,SAAb;AACH;AAHI;AAjBG,CAAhB;AAwBA,IAAMK,KAAK,GAAG9D,WAAW,CAAC;AACtB+D,EAAAA,OAAO,EAAE;AACL3B,IAAAA,QAAQ,EAARA,QADK;AAEL/B,IAAAA,QAAQ,EAARA,QAFK;AAGLmD,IAAAA,OAAO,EAAPA;AAHK;AADa,CAAD,CAAzB;AAQA,eAAeM,KAAf","sourcesContent":["import { createStore } from 'vuex'\r\nimport { login, logout, getCurrentUser } from '../controller/AuthService';\r\nimport router from '../router'\r\n\r\nconst denuncia = {\r\n    namespaced: true,\r\n    state: {\r\n        denuncia: {\r\n            vitima: {\r\n                endereco: {},\r\n                trabalho: {},\r\n                filiacao: {},\r\n                isValid: true,\r\n            },\r\n\r\n            agressor: {\r\n                endereco: {},\r\n                trabalho: {},\r\n                filiacao: {},\r\n                isValid: true,\r\n            },\r\n        }\r\n    },\r\n    mutations: {\r\n        SET_FORM_VITIMA(state, form) {\r\n            state.denuncia.vitima = form\r\n        },\r\n        SET_FORM_AGRESSOR(state, form) {\r\n            state.denuncia.agressor = form\r\n        },\r\n        SET_VALID_AGRESSOR(state, v) {\r\n            state.denuncia.agressor.isValid = v\r\n        },\r\n        SET_VALID_VITIMA(state, v) {\r\n            state.denuncia.vitima.isValid = v\r\n        },\r\n        SET_DENUNCIA(state, form) {\r\n            state.denuncia = form\r\n        },\r\n    },\r\n    actions: {\r\n        setFormAgressor({ commit }, form) {\r\n            commit('SET_FORM_AGRESSOR', form)\r\n        },\r\n        setValidAgressor({ commit }, v) {\r\n            commit('SET_VALID_AGRESSOR', v)\r\n        },\r\n        setDenuncia({ commit }, denuncia) {\r\n            commit('SET_DENUNCIA', denuncia)\r\n        },\r\n        setFormVitima({ commit }, form) {\r\n            commit('SET_FORM_VITIMA', form)\r\n        },\r\n        setValidVitima({ commit }, v) {\r\n            commit('SET_VALID_VITIMA', v)\r\n        },\r\n    },\r\n    getters: {\r\n        getVitima(state) {\r\n            return state.denuncia.vitima\r\n        },\r\n        getDenuncia(state) {\r\n            return state.denuncia\r\n        },\r\n        getAgressor(state) {\r\n            return state.denuncia.agressor\r\n        },\r\n        vitimaIsValid(state) {\r\n            return state.denuncia.vitima.isValid\r\n        },\r\n        agressorIsValid(state) {\r\n            return state.denuncia.agressor.isValid\r\n        },\r\n        denunciaIsValid(state) {\r\n            return this.vitimaIsValid(state) && this.agressorIsValid(state)\r\n        },\r\n    },\r\n}\r\n\r\nconst security = {\r\n    state: {\r\n        user: {},\r\n        logged: getCurrentUser() != null,\r\n        isInited: false,\r\n    },\r\n    mutations: {\r\n        SET_USER(state, user) {\r\n            state.user = user\r\n            state.logged = true\r\n        },\r\n        LOGOUT_USER(state) {\r\n            state.user = {}\r\n            state.logged = false\r\n        },\r\n        INITED(state) {\r\n            state.isInited = true;\r\n        }\r\n    },\r\n    actions: {\r\n        setUser({ commit }, user) {\r\n            commit('SET_USER', user)\r\n        },\r\n        async login({ dispatch }, { email, password }) {\r\n            const result = await login(email, password).then(usr => {\r\n                if (!usr)\r\n                    return false\r\n                dispatch('setUser', usr)\r\n                return true\r\n            })\r\n            if (result)\r\n                router.push({ name: 'Página Inicial' })\r\n        },\r\n        async logout({ commit }) {\r\n            router.push({ name: 'Home' })\r\n            await logout()\r\n            commit('LOGOUT_USER')\r\n        },\r\n        stateChange({ dispatch, commit }, usr) {\r\n            commit('INITED')\r\n            if (usr) {\r\n                dispatch('setUser', usr)\r\n            } else {\r\n                commit('LOGOUT_USER')\r\n            }\r\n        }\r\n    },\r\n    getters: {\r\n        getUser(state) {\r\n            return state.user\r\n        },\r\n        getLogged(state) {\r\n            let usr = getCurrentUser()\r\n            if (usr && !!usr != state.logged)\r\n                state.dispatch('setUser', usr)\r\n            return state.logged\r\n\r\n        },\r\n        getInited(state) {\r\n            return state.isInited\r\n        },\r\n    },\r\n}\r\n\r\nconst algolia = {\r\n    namespaced: true,\r\n\r\n    state: {\r\n        refreshed: false,\r\n    },\r\n    mutations: {\r\n        SET_REFRESHED(state, refresh) {\r\n            state.refreshed = refresh;\r\n        },\r\n\r\n    },\r\n    actions: {\r\n        setRefreshed({ commit }, refresh) {\r\n            commit('SET_REFRESHED', refresh)\r\n        },\r\n    },\r\n    getters: {\r\n        getRefreshed(state) {\r\n            return state.refreshed\r\n        },\r\n    },\r\n}\r\n\r\nconst store = createStore({\r\n    modules: {\r\n        security,\r\n        denuncia,\r\n        algolia\r\n    }\r\n})\r\n\r\nexport default store"]}]}