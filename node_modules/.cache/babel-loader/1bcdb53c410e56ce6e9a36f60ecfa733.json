{"remainingRequest":"E:\\AppFrida\\node_modules\\babel-loader\\lib\\index.js!E:\\AppFrida\\node_modules\\vue-instantsearch\\vue2\\es\\src\\components\\Pagination.vue.js","dependencies":[{"path":"E:\\AppFrida\\node_modules\\vue-instantsearch\\vue2\\es\\src\\components\\Pagination.vue.js","mtime":1631701305000},{"path":"E:\\AppFrida\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\AppFrida\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../../src/components/Pagination.vue"],"names":["render","name","mixins","createSuitMixin","createWidgetMixin","connector","connectPagination","createPanelConsumerMixin","mapStateToCanRefine","state","nbPages","props","padding","type","Number","default","undefined","validator","value","totalPages","showFirst","Boolean","showLast","showNext","showPrevious","computed","widgetParams","this","emits","methods","refine","page","const","p","Math","min","max","$emit"],"mappings":"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","sourcesContent":["<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :refine=\"refine\"\n      :createURL=\"state.createURL\"\n      :current-refinement=\"state.currentRefinement\"\n      :nb-hits=\"state.nbHits\"\n      :nb-pages=\"state.nbPages\"\n      :pages=\"state.pages\"\n      :is-first-page=\"state.isFirstPage\"\n      :is-last-page=\"state.isLastPage\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item', 'firstPage')]: true,\n            [suit('item', 'disabled')]: state.isFirstPage,\n          }\"\n          v-if=\"showFirst\"\n        >\n          <slot\n            name=\"first\"\n            :createURL=\"() => state.createURL(0)\"\n            :is-first-page=\"state.isFirstPage\"\n            :refine=\"() => refine(0)\"\n          >\n            <template v-if=\"!state.isFirstPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"First\"\n                :href=\"state.createURL(0)\"\n                @click.prevent=\"refine(0)\"\n              >‹‹</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"First\"\n              >‹‹</span>\n            </template>\n          </slot>\n        </li>\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item', 'previousPage')]: true,\n            [suit('item', 'disabled')]: state.isFirstPage,\n          }\"\n          v-if=\"showPrevious\"\n        >\n          <slot\n            name=\"previous\"\n            :createURL=\"() => state.createURL(state.currentRefinement - 1)\"\n            :is-first-page=\"state.isFirstPage\"\n            :refine=\"() => refine(state.currentRefinement - 1)\"\n          >\n            <template v-if=\"!state.isFirstPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"Previous\"\n                :href=\"state.createURL(state.currentRefinement - 1)\"\n                @click.prevent=\"refine(state.currentRefinement - 1)\"\n              >‹</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"Previous\"\n              >‹</span>\n            </template>\n          </slot>\n        </li>\n\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item', 'selected')]: state.currentRefinement === page\n          }\"\n          v-for=\"page in state.pages\"\n          :key=\"page\"\n        >\n          <slot\n            name=\"item\"\n            :page=\"page\"\n            :createURL=\"() => state.createURL(page)\"\n            :is-first-page=\"state.isFirstPage\"\n            :is-last-page=\"state.isLastPage\"\n            :refine=\"() => refine(page)\"\n          >\n            <a\n              :class=\"suit('link')\"\n              :href=\"state.createURL(page)\"\n              @click.prevent=\"refine(page)\"\n            >{{ page + 1 }}</a>\n          </slot>\n        </li>\n\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item','nextPage')]: true,\n            [suit('item','disabled')]: state.isLastPage\n          }\"\n          v-if=\"showNext\"\n        >\n          <slot\n            name=\"next\"\n            :createURL=\"() => state.createURL(state.currentRefinement + 1)\"\n            :is-last-page=\"state.isLastPage\"\n            :refine=\"() => refine(state.currentRefinement + 1)\"\n          >\n            <template v-if=\"!state.isLastPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"Next\"\n                :href=\"state.createURL(state.currentRefinement + 1)\"\n                @click.prevent=\"refine(state.currentRefinement + 1)\"\n              >›</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"Next\"\n              >›</span>\n            </template>\n          </slot>\n        </li>\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item','lastPage')]: true,\n            [suit('item','disabled')]: state.isLastPage,\n          }\"\n          v-if=\"showLast\"\n        >\n          <slot\n            name=\"last\"\n            :createURL=\"() => state.createURL(state.nbPages - 1)\"\n            :is-last-page=\"state.isLastPage\"\n            :refine=\"() => refine(state.nbPages - 1)\"\n          >\n            <template v-if=\"!state.isLastPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"Last\"\n                :href=\"state.createURL(state.nbPages - 1)\"\n                @click.prevent=\"refine(state.nbPages - 1)\"\n              >››</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"Last\"\n              >››</span>\n            </template>\n          </slot>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectPagination } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisPagination',\n  mixins: [\n    createSuitMixin({ name: 'Pagination' }),\n    createWidgetMixin({ connector: connectPagination }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.nbPages > 1,\n    }),\n  ],\n  props: {\n    padding: {\n      type: Number,\n      default: undefined,\n      validator(value) {\n        return value > 0;\n      },\n    },\n    totalPages: {\n      type: Number,\n      default: undefined,\n      validator(value) {\n        return value > 0;\n      },\n    },\n    showFirst: {\n      type: Boolean,\n      default: true,\n    },\n    showLast: {\n      type: Boolean,\n      default: true,\n    },\n    showNext: {\n      type: Boolean,\n      default: true,\n    },\n    showPrevious: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        padding: this.padding,\n        totalPages: this.totalPages,\n      };\n    },\n  },\n  emits: ['page-change'],\n  methods: {\n    refine(page) {\n      const p = Math.min(Math.max(page, 0), this.state.nbPages - 1);\n      this.state.refine(p);\n      // TODO: do this in a general way\n      this.$emit('page-change', p);\n    },\n  },\n};\n</script>\n"]}]}