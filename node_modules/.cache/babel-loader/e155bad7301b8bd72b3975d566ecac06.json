{"remainingRequest":"E:\\AppFrida\\node_modules\\babel-loader\\lib\\index.js!E:\\AppFrida\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\AppFrida\\src\\main.js","dependencies":[{"path":"E:\\AppFrida\\src\\main.js","mtime":1630534584099},{"path":"E:\\AppFrida\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\AppFrida\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\AppFrida\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJFOlxcQXBwRnJpZGFcXG5vZGVfbW9kdWxlc1xcY29yZS1qc1xcbW9kdWxlc1xcZXMuYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgIkU6XFxBcHBGcmlkYVxcbm9kZV9tb2R1bGVzXFxjb3JlLWpzXFxtb2R1bGVzXFxlcy5wcm9taXNlLmpzIjsKaW1wb3J0ICJFOlxcQXBwRnJpZGFcXG5vZGVfbW9kdWxlc1xcY29yZS1qc1xcbW9kdWxlc1xcZXMub2JqZWN0LmFzc2lnbi5qcyI7CmltcG9ydCAiRTpcXEFwcEZyaWRhXFxub2RlX21vZHVsZXNcXGNvcmUtanNcXG1vZHVsZXNcXGVzLnByb21pc2UuZmluYWxseS5qcyI7CmltcG9ydCB7IGNyZWF0ZUFwcCB9IGZyb20gJ3Z1ZSc7CmltcG9ydCBFbGVtZW50UGx1cyBmcm9tICdlbGVtZW50LXBsdXMnOwppbXBvcnQgJy4uL3RoZW1lcy9pbmRleC5jc3MnOwppbXBvcnQgcm91dGVyIGZyb20gIi4vcm91dGVyIjsKaW1wb3J0IEFwcCBmcm9tICcuL0FwcC52dWUnOwppbXBvcnQgTWFza2EgZnJvbSAnbWFza2EnOwppbXBvcnQgVnVlU3dlZXRhbGVydDIgZnJvbSAndnVlLXN3ZWV0YWxlcnQyJzsKaW1wb3J0ICdzd2VldGFsZXJ0Mi9kaXN0L3N3ZWV0YWxlcnQyLm1pbi5jc3MnOwppbXBvcnQgc3RvcmUgZnJvbSAnLi9zdG9yZSc7CmltcG9ydCB7IHNldFdhdGNoZXIgfSBmcm9tICIuL2NvbnRyb2xsZXIvQXV0aFNlcnZpY2UiOwp2YXIgYXBwID0gbnVsbDsKc2V0V2F0Y2hlcihmdW5jdGlvbiAodXNyKSB7CiAgaWYgKGFwcCkgcmV0dXJuOwogIGFwcCA9IGNyZWF0ZUFwcChBcHApLnVzZShNYXNrYSkudXNlKEVsZW1lbnRQbHVzKS51c2Uocm91dGVyKS51c2Uoc3RvcmUpLnVzZShWdWVTd2VldGFsZXJ0Mik7CiAgc3RvcmUuZGlzcGF0Y2goJ3N0YXRlQ2hhbmdlJywgdXNyKTsKICByb3V0ZXIuYmVmb3JlRWFjaChmdW5jdGlvbiAodG8sIGZyb20sIG5leHQpIHsKICAgIHZhciBsb2dnZWQgPSBzdG9yZS5nZXR0ZXJzLmdldExvZ2dlZDsKCiAgICBpZiAoIWxvZ2dlZCAmJiB0by5tYXRjaGVkLnNvbWUoZnVuY3Rpb24gKHJlY29yZCkgewogICAgICByZXR1cm4gcmVjb3JkLm1ldGEucmVxdWlyZXNBdXRoOwogICAgfSkpIHsKICAgICAgcmV0dXJuIG5leHQoJy9sb2dpbicpOwogICAgfQoKICAgIG5leHQoKTsKICB9KTsKICBhcHAubW91bnQoJyNhcHAnKTsKfSk7"},{"version":3,"sources":["E:/AppFrida/src/main.js"],"names":["createApp","ElementPlus","router","App","Maska","VueSweetalert2","store","setWatcher","app","usr","use","dispatch","beforeEach","to","from","next","logged","getters","getLogged","matched","some","record","meta","requiresAuth","mount"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,KAA1B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,qBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,IAAIC,GAAG,GAAG,IAAV;AACAD,UAAU,CAAC,UAACE,GAAD,EAAS;AAChB,MAAID,GAAJ,EACI;AACJA,EAAAA,GAAG,GAAGR,SAAS,CAACG,GAAD,CAAT,CAAeO,GAAf,CAAmBN,KAAnB,EAA0BM,GAA1B,CAA8BT,WAA9B,EAA2CS,GAA3C,CAA+CR,MAA/C,EAAuDQ,GAAvD,CAA2DJ,KAA3D,EAAkEI,GAAlE,CAAsEL,cAAtE,CAAN;AACAC,EAAAA,KAAK,CAACK,QAAN,CAAe,aAAf,EAA6BF,GAA7B;AACAP,EAAAA,MAAM,CAACU,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAClC,QAAMC,MAAM,GAAGV,KAAK,CAACW,OAAN,CAAcC,SAA7B;;AACA,QAAI,CAACF,MAAD,IAAWH,EAAE,CAACM,OAAH,CAAWC,IAAX,CAAgB,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,IAAP,CAAYC,YAAhB;AAAA,KAAtB,CAAf,EAAoE;AAChE,aAAOR,IAAI,CAAC,QAAD,CAAX;AACH;;AACDA,IAAAA,IAAI;AACP,GAND;AAOAP,EAAAA,GAAG,CAACgB,KAAJ,CAAU,MAAV;AACH,CAbS,CAAV","sourcesContent":["import { createApp } from 'vue'\r\nimport ElementPlus from 'element-plus';\r\nimport '../themes/index.css';\r\nimport router from \"./router\";\r\nimport App from './App.vue';\r\nimport Maska from 'maska';\r\nimport VueSweetalert2 from 'vue-sweetalert2';\r\nimport 'sweetalert2/dist/sweetalert2.min.css';\r\nimport store from './store'\r\nimport { setWatcher } from \"./controller/AuthService\";\r\n\r\nlet app = null;\r\nsetWatcher((usr) => {\r\n    if (app)\r\n        return\r\n    app = createApp(App).use(Maska).use(ElementPlus).use(router).use(store).use(VueSweetalert2)\r\n    store.dispatch('stateChange',usr)\r\n    router.beforeEach((to, from, next) => {\r\n        const logged = store.getters.getLogged;\r\n        if (!logged && to.matched.some(record => record.meta.requiresAuth)) {\r\n            return next('/login');\r\n        }\r\n        next();\r\n    });\r\n    app.mount('#app')\r\n})\r\n"]}]}