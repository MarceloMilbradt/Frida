{"remainingRequest":"E:\\AppFrida\\node_modules\\babel-loader\\lib\\index.js!E:\\AppFrida\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!E:\\AppFrida\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\AppFrida\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!E:\\AppFrida\\src\\components\\StateRefresher.vue?vue&type=template&id=76095de7","dependencies":[{"path":"E:\\AppFrida\\src\\components\\StateRefresher.vue","mtime":1632552767168},{"path":"E:\\AppFrida\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\AppFrida\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\AppFrida\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1628298225000},{"path":"E:\\AppFrida\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\AppFrida\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGtleTogMAp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBmYWxzZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKTsKfQ=="},{"version":3,"sources":["E:\\AppFrida\\src\\components\\StateRefresher.vue"],"names":[],"mappings":";;;;;SACa,S,cAAX,mBAAA,CAAwB,KAAxB,EAAwB,UAAxB,CAAW,I","sourcesContent":["<template>\r\n  <div v-if=\"false\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { createWidgetMixin } from \"vue-instantsearch/vue3/es\";\r\n\r\nconst connectRefresh =\r\n  (renderFn, unmountFn) =>\r\n  (widgetParams = {}) => ({\r\n    init() {\r\n      renderFn({ refresh: {} }, true);\r\n    },\r\n\r\n    render({ instantSearchInstance }) {\r\n      const refresh = instantSearchInstance.refresh.bind(instantSearchInstance);\r\n      renderFn({ refresh }, false);\r\n    },\r\n\r\n    dispose() {\r\n      unmountFn();\r\n    },\r\n  });\r\n\r\nexport default {\r\n  props: {\r\n    delay: {\r\n      type: Number,\r\n      default: 2500, // (1 seconds)\r\n    },\r\n  },\r\n  name: \"StateRefresher\",\r\n  mixins: [createWidgetMixin({ connector: connectRefresh })],\r\n  created() {\r\n    this.timerId = setTimeout(() => {\r\n      console.log(\"Refresh\")\r\n      this.state.refresh();\r\n    }, this.delay);\r\n  },\r\n};\r\n</script>"],"sourceRoot":""}]}