{"remainingRequest":"E:\\AppFrida\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!E:\\AppFrida\\src\\components\\FormAjuda.vue?vue&type=style&index=0&id=098c6605&scoped=true&lang=css","dependencies":[{"path":"E:\\AppFrida\\src\\components\\FormAjuda.vue","mtime":1630376565949},{"path":"E:\\AppFrida\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\AppFrida\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1628298225000},{"path":"E:\\AppFrida\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\AppFrida\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\AppFrida\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppIHsNCiAgZm9udC1zaXplOiAyLjVlbTsNCn0NCi5lbC1yb3cgew0KICBhbGlnbi1pdGVtczogZmxleC1lbmQ7DQp9DQouZ2VvIHsNCiAgbWFyZ2luLWJvdHRvbTogMS4zNzVlbTsNCn0NCi5ib3gtY2FyZCB7DQogIHdpZHRoOiAzNy41ZW07DQogIG1hcmdpbjogYXV0bzsNCn0NCkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkgew0KICAuYm94LWNhcmQgew0KICAgIHdpZHRoOiA5MHZ3Ow0KICB9DQogIC5nZW8tdGV4dCB7DQogICAgZGlzcGxheTogbm9uZTsNCiAgfQ0KfQ0K"},{"version":3,"sources":["E:\\AppFrida\\src\\components\\FormAjuda.vue"],"names":[],"mappings":";AAiJA,EAAE;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB;AACA,CAAC,CAAC,CAAC,EAAE;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACd;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf;AACF","file":"E:/AppFrida/src/components/FormAjuda.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <el-card class=\"box-card\">\r\n    <el-container>\r\n      <el-header style=\"text-align: center\" height=\"20px\"\r\n        >Precisamos de algumas informações suas para podermos te\r\n        ajudar!</el-header\r\n      >\r\n      <el-divider></el-divider>\r\n      <el-main>\r\n        <el-form\r\n          :model=\"form\"\r\n          :label-position=\"'top'\"\r\n          label-width=\"70px\"\r\n          :rules=\"rules\"\r\n          ref=\"form\"\r\n        >\r\n          <el-row>\r\n            <el-col :span=\"24\">\r\n              <TextField\r\n                :fontSize=\"'20px'\"\r\n                prop=\"nome\"\r\n                label=\"Nome\"\r\n                v-model=\"form.nome\"\r\n              />\r\n            </el-col>\r\n          </el-row>\r\n\r\n          <el-row>\r\n            <el-col :span=\"24\">\r\n              <TextField\r\n                v-model=\"form.contato\"\r\n                label=\"Como podemos entrar em contato ?\"\r\n              />\r\n            </el-col>\r\n          </el-row>\r\n\r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"geo ? 19 : 17\">\r\n              <TextField\r\n                v-model=\"form.endereco\"\r\n                label=\"Onde podemos te encontrar ?\"\r\n              />\r\n            </el-col>\r\n            <el-col :span=\"geo ? 4 : 6\">\r\n              <el-button\r\n                v-if=\"!geo\"\r\n                class=\"geo\"\r\n                :type=\"!geo ? 'info' : 'success'\"\r\n                icon=\"el-icon-location-outline\"\r\n                @click=\"getGeo\"\r\n                round\r\n              >\r\n                <span class=\"geo-text\">Localização</span>\r\n              </el-button>\r\n              <CircleCheck\r\n                v-if=\"geo\"\r\n                color=\"green\"\r\n                size=\"2\"\r\n                style=\"width: 2.25em; height: 2.25em; margin-bottom: 1.25em\"\r\n              />\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"24\">\r\n              <el-button\r\n                icon=\"el-icon-check\"\r\n                @click=\"$emit('clickSubmit', form)\"\r\n                type=\"primary\"\r\n                plain\r\n              >\r\n                <span class=\"\">Enviar</span>\r\n              </el-button>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form>\r\n      </el-main>\r\n    </el-container>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport TextField from \"./TextField.vue\";\r\nimport { CircleCheck } from \"@element-plus/icons\";\r\nimport * as geolocation from \"../controller/MapBoxs\";\r\n\r\nexport default {\r\n  components: {\r\n    TextField,\r\n    CircleCheck,\r\n  },\r\n  name: \"FormPessoa\",\r\n  props: {\r\n    text: String,\r\n    anonimo: Boolean,\r\n  },\r\n  data() {\r\n    return {\r\n      form: {\r\n        nome: \"\",\r\n        endereco: \"\",\r\n        contato: \"\",\r\n        data: new Date().toISOString(),\r\n        coords: {\r\n          latitude: \"\",\r\n          longitude: \"\",\r\n        },\r\n      },\r\n      geo: false,\r\n    };\r\n  },\r\n  computed: {\r\n    rules() {\r\n      return {\r\n        nome: [\r\n          {\r\n            required: !this.anonimo,\r\n            message: \"Informe ao menos seu nome!\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    async setGeo({ latitude, longitude }) {\r\n      console.log(latitude, longitude)\r\n      const ends = await geolocation.getLocation(latitude,longitude)\r\n      const endereco = ends?.place_name ?? ''\r\n      this.form = { ...this.form, endereco, coords: { latitude, longitude } };\r\n      this.geo = true;\r\n    },\r\n    getGeo() {\r\n      return navigator.geolocation.getCurrentPosition(\r\n        (geo) => this.setGeo(geo.coords),\r\n        console.log,\r\n        {\r\n          enableHighAccuracy: true,\r\n        }\r\n      );\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ni {\r\n  font-size: 2.5em;\r\n}\r\n.el-row {\r\n  align-items: flex-end;\r\n}\r\n.geo {\r\n  margin-bottom: 1.375em;\r\n}\r\n.box-card {\r\n  width: 37.5em;\r\n  margin: auto;\r\n}\r\n@media (max-width: 800px) {\r\n  .box-card {\r\n    width: 90vw;\r\n  }\r\n  .geo-text {\r\n    display: none;\r\n  }\r\n}\r\n</style>"]}]}